{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "prd"
      ],
      "metadata": {
        "description": "Production or development environment"
      }
    },
    "deploymentPrefix": {
      "type": "string",
      "defaultValue": "rpx",
      "minLength": 1,
      "maxLength": 10,
      "metadata": {
        "description": "The deployment name prefix. Virtual Machine name is [prefix][environment][increment]"
      }
    },
    "vpnType": {
      "type": "string",
      "metadata": {
        "description": "RouteBased or PolicyBased"
      },
      "defaultValue": "RouteBased",
      "allowedValues": [
        "RouteBased",
        "PolicyBased"
      ]
    },
    "localGatewayIpAddress": {
      "type": "string",
      "defaultValue": "70.90.80.100",
      "metadata": {
        "description": "Public IP of your VPN device"
      }
    },
    "localAddressPrefix": {
      "type": "string",
      "defaultValue": "172.16.0.0/16"
    },
    "sharedKey": {
      "type": "string",
      "defaultValue": "DontBeAnIdiot-ChangeMe",
      "metadata": {
        "description": "Shared key"
      }
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "VirtualMachineWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14"
      ],
      "metadata": {
        "description": "Size of the virtual machine, must be available in the virtual machine's location"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VM instances to be created behind load balancer"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "vmNameBase": "[concat(parameters('deploymentPrefix'),parameters('environment'))]",
    "vhdStorageType": "Standard_LRS",
    "vhdStorageName": "[concat('vhdstg', uniqueString(resourceGroup().id))]",
    "availabilitySetName": "[concat('AVSet',parameters('deploymentPrefix'))]",
    "subnetName": "[concat('Subnet',parameters('deploymentPrefix'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetName'))]",
    "vNetName": "[concat('vNet',parameters('deploymentPrefix'))]",
    "vNetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "vNetPrefix": "10.0.0.0/16",
    "vNetSubnet1Name": "[concat(variables('subnetName'), '1')]",
    "vNetSubnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables ('vNetSubnet1Name'))]",
    "vNetSubnet1Prefix": "10.0.0.0/24",
    "gatewaySubnetPrefix": "10.0.254.0/29",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressName": "[concat('pubIP',parameters('deploymentPrefix'))]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "publicVPNIPAddressType": "Dynamic",
    "publicVPNIPAddressName": "[concat('pubVPNIP',parameters('deploymentPrefix'))]",
    "publicVPNIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicVPNIPAddressName'))]",
    "VPNDNSName": "[concat('vpn',parameters('deploymentPrefix'), uniqueString(resourceGroup().id))]",
    "localGatewayName": "[concat('localGateway',parameters('deploymentPrefix'))]",
    "virtualGatewayName": "[concat('virtualGateway',parameters('deploymentPrefix'))]",
    "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
    "vpnConnectionName": "[concat('vpnConnection',parameters('deploymentPrefix'))]",
    "lbName": "[concat('LB',parameters('deploymentPrefix'))]",
    "lbDNSName": "[concat(parameters('deploymentPrefix'), uniqueString(resourceGroup().id))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "lbFrontend": "[concat('lbFrontend',parameters('deploymentPrefix'))]",
    "lbBackendAddrPool": "[concat('lbBackEndPool',parameters('deploymentPrefix'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('lbFrontend'))]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('lbBackendAddrPool'))]",
    "lbtcpProbe80": "[concat('tcpProbe80',parameters('deploymentPrefix'))]",
    "lbtcpProbe80ID": "[concat(variables('lbID'),'/probes/',variables('lbtcpProbe80'))]",
    "lbtcpProbe443": "[concat('tcpProbe443',parameters('deploymentPrefix'))]",
    "lbtcpProbe443ID": "[concat(variables('lbID'),'/probes/',variables('lbtcpProbe443'))]",
    "lbRule80WS": "[concat('Rule80WS',parameters('deploymentPrefix'))]",
    "lbRule443WS": "[concat('Rule443WS',parameters('deploymentPrefix'))]",
    "nicNamePrefix": "[concat('nic',parameters('deploymentPrefix'))]",
    "VirtualMachineImagePublisher": "MicrosoftWindowsServer",
    "VirtualMachineImageOffer": "WindowsServer",
    "vmOSDiskName": "[concat('osdisk', variables('vmNameBase'))]",
    "DSCExtConfigurationFunction": "DSCExtConfiguration.ps1\\Main"
  },
  "resources": [
    {
      "name": "[variables('vhdStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('vhdStorageType')]"
      }
    },
    {
      "name": "[variables('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "AvailabilitySet"
      },
      "properties": { }
    },
    {
      "name": "[variables('vNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vNetSubnet1Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIP"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('lbDNSName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicVPNIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicVPNIP"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicVPNIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('VPNDNSName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[variables('localGatewayName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "localNetworkGateway"
      },
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": [
            "[parameters('localAddressPrefix')]"
          ]
        },
        "gatewayIpAddress": "[parameters('localGatewayIpAddress')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('virtualGatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicVPNIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]"
      ],
      "tags": {
        "displayName": "virtualNetworkGateway"
      },
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicVPNIPAddressName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "[parameters('vpnType')]",
        "enableBgp": false
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/connections",
      "name": "[variables('vpnConnectionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', variables('virtualGatewayName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', variables('localGatewayName'))]"
      ],
      "tags": {
        "displayName": "vpnConnection"
      },
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('virtualGatewayName'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName'))]"
        },
        "connectionType": "IPsec",
        "routingWeight": 10,
        "sharedKey": "[parameters('sharedKey')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "tags": {
        "displayName": "LoadBalancer"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFrontend')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBackendAddrPool')]"
          }
        ],
        "probes": [
          {
            "name": "[variables('lbtcpProbe80')]",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "[variables('lbtcpProbe443')]",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('lbRule80WS')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbtcpProbe80ID')]"
              }
            }
          },
          {
            "name": "[variables('lbRule443WS')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbtcpProbe443ID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "copy": {
        "name": "lbRdpNatLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "name": "[concat('/',variables('lbName'),'/','VM-', copyIndex(1),'-RDP')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/',variables('lbName'))]"
      ],
      "tags": {
        "displayName": "inboundNatRules"
      },
      "properties": {
        "frontendIPConfiguration": {
          "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('lbName'),variables('lbFrontend'))]"
        },
        "protocol": "tcp",
        "frontendPort": "[add(3389, copyIndex(1))]",
        "backendPort": 3389,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicNamePrefix'), copyindex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "tags": {
        "displayName": "NetworkInterface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vNetSubnet1Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/','VM-', copyIndex(1),'-RDP')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNameBase'), copyindex(1))]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyindex(1))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "tags": {
        "displayName": "VirtualMachine"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmNameBase'), copyindex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('VirtualMachineImagePublisher')]",
            "offer": "[variables('VirtualMachineImageOffer')]",
            "sku": "[parameters('VirtualMachineWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('vmOSDiskName')]",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/vhds/', variables('vmOSDiskName'), copyindex(1), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNamePrefix'), copyindex(1)))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "DSCExt",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(variables('vmNameBase'), copyindex(1)))]"
          ],
          "tags": {
            "displayName": "DSCExt"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'dsc.zip')]",
              "sasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationFunction": "[variables('DSCExtConfigurationFunction')]",
              "properties": {
                "nodeName": "[concat(variables('vmNameBase'), copyindex(1))]"
              }
            },
            "protectedSettings": { }
          }
        }
      ]
    }


  ],
  "outputs": {
  }
}
